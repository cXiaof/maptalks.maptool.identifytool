/*!
 * maptalks.maptool.identifytool v0.1.0-alpha.1
 * LICENSE : MIT
 * (c) 2016-2022 maptalks.org
 */
/*!
 * requires maptalks@>=1.0.0-rc.1 
 */
!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("maptalks")):"function"==typeof define&&define.amd?define(["exports","maptalks"],t):t(e.maptalks=e.maptalks||{},e.maptalks)}(this,function(R,i){"use strict";var j="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},e=6371008.8,n={centimeters:100*e,centimetres:100*e,degrees:e/111325,feet:3.28084*e,inches:39.37*e,kilometers:e/1e3,kilometres:e/1e3,meters:e,metres:e,miles:e/1609.344,millimeters:1e3*e,millimetres:1e3*e,nauticalmiles:e/1852,radians:1,yards:1.0936*e},o={acres:247105e-9,centimeters:1e4,centimetres:1e4,feet:10.763910417,hectares:1e-4,inches:1550.003100006,kilometers:1e-6,kilometres:1e-6,meters:1,metres:1,miles:386e-9,millimeters:1e6,millimetres:1e6,yards:1.195990046};function c(e,t,r){var n={type:"Feature"};return 0!==(r=void 0===r?{}:r).id&&!r.id||(n.id=r.id),r.bbox&&(n.bbox=r.bbox),n.properties=t||{},n.geometry=e,n}function l(e,t,r){if(void 0===r&&(r={}),!e)throw new Error("coordinates is required");if(!Array.isArray(e))throw new Error("coordinates must be an Array");if(e.length<2)throw new Error("coordinates must be at least 2 numbers long");if(f(e[0])&&f(e[1]))return c({type:"Point",coordinates:e},t,r);throw new Error("coordinates must contain numbers")}function a(e,t,r){void 0===r&&(r={});for(var n=0,i=e;n<i.length;n++){var o=i[n];if(o.length<4)throw new Error("Each LinearRing of a Polygon must have 4 or more Positions.");for(var a=0;a<o[o.length-1].length;a++)if(o[o.length-1][a]!==o[0][a])throw new Error("First and last Position are not equivalent.")}return c({type:"Polygon",coordinates:e},t,r)}function d(e,t,r){if(void 0===r&&(r={}),e.length<2)throw new Error("coordinates must be an array of two or more positions");return c({type:"LineString",coordinates:e},t,r)}function u(e,t){var r={type:"FeatureCollection"};return(t=void 0===t?{}:t).id&&(r.id=t.id),t.bbox&&(r.bbox=t.bbox),r.features=e,r}function s(e,t,r){return c({type:"MultiLineString",coordinates:e},t,r=void 0===r?{}:r)}function I(e,t,r){return c({type:"MultiPoint",coordinates:e},t,r=void 0===r?{}:r)}function D(e,t,r){return c({type:"MultiPolygon",coordinates:e},t,r=void 0===r?{}:r)}function T(e,t){var r=n[t=void 0===t?"kilometers":t];if(r)return e*r;throw new Error(t+" units is invalid")}function h(e,t){var r=n[t=void 0===t?"kilometers":t];if(r)return e/r;throw new Error(t+" units is invalid")}function N(e){return 180*(e%(2*Math.PI))/Math.PI}function f(e){return!isNaN(e)&&null!==e&&!Array.isArray(e)}function p(e){return!!e&&e.constructor===Object}e=Object.freeze({earthRadius:e,factors:n,unitsFactors:{centimeters:100,centimetres:100,degrees:1/111325,feet:3.28084,inches:39.37,kilometers:.001,kilometres:.001,meters:1,metres:1,miles:1/1609.344,millimeters:1e3,millimetres:1e3,nauticalmiles:1/1852,radians:1/e,yards:1.0936133},areaFactors:o,feature:c,geometry:function(e,t,r){switch(void 0===r&&(r={}),e){case"Point":return l(t).geometry;case"LineString":return d(t).geometry;case"Polygon":return a(t).geometry;case"MultiPoint":return I(t).geometry;case"MultiLineString":return s(t).geometry;case"MultiPolygon":return D(t).geometry;default:throw new Error(e+" is invalid")}},point:l,points:function(e,t,r){return void 0===r&&(r={}),u(e.map(function(e){return l(e,t)}),r)},polygon:a,polygons:function(e,t,r){return void 0===r&&(r={}),u(e.map(function(e){return a(e,t)}),r)},lineString:d,lineStrings:function(e,t,r){return void 0===r&&(r={}),u(e.map(function(e){return d(e,t)}),r)},featureCollection:u,multiLineString:s,multiPoint:I,multiPolygon:D,geometryCollection:function(e,t,r){return c({type:"GeometryCollection",geometries:e},t,r=void 0===r?{}:r)},round:function(e,t){if(!(t=void 0===t?0:t)||0<=t)return t=Math.pow(10,t||0),Math.round(e*t)/t;throw new Error("precision must be a positive number")},radiansToLength:T,lengthToRadians:h,lengthToDegrees:function(e,t){return N(h(e,t))},bearingToAzimuth:function(e){return(e%=360)<0&&(e+=360),e},radiansToDegrees:N,degreesToRadians:function(e){return e%360*Math.PI/180},convertLength:function(e,t,r){if(void 0===t&&(t="kilometers"),void 0===r&&(r="kilometers"),0<=e)return T(h(e,t),r);throw new Error("length must be a positive number")},convertArea:function(e,t,r){if(void 0===t&&(t="meters"),void 0===r&&(r="kilometers"),!(0<=e))throw new Error("area must be a positive number");if(!(t=o[t]))throw new Error("invalid original units");if(r=o[r])return e/t*r;throw new Error("invalid final units")},isNumber:f,isObject:p,validateBBox:function(e){if(!e)throw new Error("bbox is required");if(!Array.isArray(e))throw new Error("bbox must be an Array");if(4!==e.length&&6!==e.length)throw new Error("bbox must be an Array of 4 or 6 numbers");e.forEach(function(e){if(!f(e))throw new Error("bbox must only contain numbers")})},validateId:function(e){if(!e)throw new Error("id is required");if(-1===["string","number"].indexOf(void 0===e?"undefined":j(e)))throw new Error("id must be a number or a string")}});function g(e){if(Array.isArray(e))return e;if("Feature"===e.type){if(null!==e.geometry)return e.geometry.coordinates}else if(e.coordinates)return e.coordinates;throw new Error("coords must be GeoJSON Feature, Geometry Object or an Array")}function m(e){return"Feature"===e.type?e.geometry:e}function y(e,t,r){if(void 0===r&&(r={}),!e)throw new Error("point is required");if(!t)throw new Error("polygon is required");var n=function(e){if(!e)throw new Error("coord is required");if(!Array.isArray(e)){if("Feature"===e.type&&null!==e.geometry&&"Point"===e.geometry.type)return e.geometry.coordinates;if("Point"===e.type)return e.coordinates}if(Array.isArray(e)&&2<=e.length&&!Array.isArray(e[0])&&!Array.isArray(e[1]))return e;throw new Error("coord must be GeoJSON Point or an Array of numbers")}(e),e=m(t),i=e.type,t=t.bbox,o=e.coordinates;if(!t||!1!=(e=n,(t=t)[0]<=e[0]&&t[1]<=e[1]&&t[2]>=e[0]&&t[3]>=e[1])){"Polygon"===i&&(o=[o]);for(var a=!1,s=0;s<o.length&&!a;s++)if(q(n,o[s][0],r.ignoreBoundary)){for(var u=!1,l=1;l<o[s].length&&!u;)q(n,o[s][l],!r.ignoreBoundary)&&(u=!0),l++;u||(a=!0)}return a}}function q(e,t,r){for(var n=!1,i=0,o=(t=t[0][0]===t[t.length-1][0]&&t[0][1]===t[t.length-1][1]?t.slice(0,t.length-1):t).length-1;i<t.length;o=i++){var a=t[i][0],s=t[i][1],u=t[o][0],l=t[o][1];if(e[1]*(a-u)+s*(u-e[0])+l*(e[0]-a)==0&&(a-e[0])*(u-e[0])<=0&&(s-e[1])*(l-e[1])<=0)return!r;s>e[1]!=l>e[1]&&e[0]<(u-a)*(e[1]-s)/(l-s)+a&&(n=!n)}return n}function _(e,t,r){if(null!==e)for(var n,i,o,a=0,s=e.type,u="FeatureCollection"===s,l="Feature"===s,c=u?e.features.length:1,h=0;h<c;h++)for(var f,p,d=(p=!!(f=u?e.features[h].geometry:l?e.geometry:e)&&"GeometryCollection"===f.type)?f.geometries.length:1,g=0;g<d;g++){var m=0,y=0,v=p?f.geometries[g]:f;if(null!==v){var b=v.coordinates,w=v.type,x=!r||"Polygon"!==w&&"MultiPolygon"!==w?0:1;switch(w){case null:break;case"Point":if(!1===t(b,a,h,m,y))return!1;a++,m++;break;case"LineString":case"MultiPoint":for(n=0;n<b.length;n++){if(!1===t(b[n],a,h,m,y))return!1;a++,"MultiPoint"===w&&m++}"LineString"===w&&m++;break;case"Polygon":case"MultiLineString":for(n=0;n<b.length;n++){for(i=0;i<b[n].length-x;i++){if(!1===t(b[n][i],a,h,m,y))return!1;a++}"MultiLineString"===w&&m++,"Polygon"===w&&y++}"Polygon"===w&&m++;break;case"MultiPolygon":for(n=0;n<b.length;n++){for(i=y=0;i<b[n].length;i++){for(o=0;o<b[n][i].length-x;o++){if(!1===t(b[n][i][o],a,h,m,y))return!1;a++}y++}m++}break;case"GeometryCollection":for(n=0;n<v.geometries.length;n++)if(!1===_(v.geometries[n],t,r))return!1;break;default:throw new Error("Unknown Geometry Type")}}}}function G(e,t){var r;switch(e.type){case"FeatureCollection":for(r=0;r<e.features.length&&!1!==t(e.features[r].properties,r);r++);break;case"Feature":t(e.properties,0)}}function v(e,t){if("Feature"===e.type)t(e,0);else if("FeatureCollection"===e.type)for(var r=0;r<e.features.length&&!1!==t(e.features[r],r);r++);}function t(e,t){for(var r,n,i,o,a,s,u,l,c,h=0,f="FeatureCollection"===e.type,p="Feature"===e.type,d=f?e.features.length:1,g=0;g<d;g++){for(a=f?e.features[g].geometry:p?e.geometry:e,u=f?e.features[g].properties:p?e.properties:{},l=f?e.features[g].bbox:p?e.bbox:void 0,c=f?e.features[g].id:p?e.id:void 0,o=(s=!!a&&"GeometryCollection"===a.type)?a.geometries.length:1,n=0;n<o;n++)if(null===(i=s?a.geometries[n]:a)){if(!1===t(null,h,u,l,c))return!1}else switch(i.type){case"Point":case"LineString":case"MultiPoint":case"Polygon":case"MultiLineString":case"MultiPolygon":if(!1===t(i,h,u,l,c))return!1;break;case"GeometryCollection":for(r=0;r<i.geometries.length;r++)if(!1===t(i.geometries[r],h,u,l,c))return!1;break;default:throw new Error("Unknown Geometry Type")}h++}}function b(e,l){t(e,function(e,t,r,n,i){var o,a=null===e?null:e.type;switch(a){case null:case"Point":case"LineString":case"Polygon":return!1===l(c(e,r,{bbox:n,id:i}),t,0)?!1:void 0}switch(a){case"MultiPoint":o="Point";break;case"MultiLineString":o="LineString";break;case"MultiPolygon":o="Polygon"}for(var s=0;s<e.coordinates.length;s++){var u=e.coordinates[s];if(!1===l(c({type:o,coordinates:u},r),t,s))return!1}})}function J(e,p){b(e,function(o,a,s){var u=0;if(o.geometry){var l,c,h,f,e=o.geometry.type;if("Point"!==e&&"MultiPoint"!==e)return f=h=c=0,!1!==_(o,function(e,t,r,n,i){if(void 0===l||c<a||h<n||f<i)l=e,c=a,h=n,f=i,u=0;else{n=d([l,e],o.properties);if(!1===p(n,a,s,i,u))return!1;u++,l=e}})&&void 0}})}function z(e,a){if(!e)throw new Error("geojson is required");b(e,function(e,t,r){if(null!==e.geometry){var n=e.geometry.type,i=e.geometry.coordinates;switch(n){case"LineString":if(!1===a(e,t,r,0,0))return!1;break;case"Polygon":for(var o=0;o<i.length;o++)if(!1===a(d(i[o],e.properties),t,r,o))return!1}}})}var W=Object.freeze({coordAll:function(e){var t=[];return _(e,function(e){t.push(e)}),t},coordEach:_,coordReduce:function(e,o,a,t){var s=a;return _(e,function(e,t,r,n,i){s=0===t&&void 0===a?e:o(s,e,t,r,n,i)},t),s},featureEach:v,featureReduce:function(e,r,n){var i=n;return v(e,function(e,t){i=0===t&&void 0===n?e:r(i,e,t)}),i},findPoint:function(e,t){if(!p(t=t||{}))throw new Error("options is invalid");var r,n=t.featureIndex||0,i=t.multiFeatureIndex||0,o=t.geometryIndex||0,a=t.coordIndex||0,s=t.properties;switch(e.type){case"FeatureCollection":n<0&&(n=e.features.length+n),s=s||e.features[n].properties,r=e.features[n].geometry;break;case"Feature":s=s||e.properties,r=e.geometry;break;case"Point":case"MultiPoint":return null;case"LineString":case"Polygon":case"MultiLineString":case"MultiPolygon":r=e;break;default:throw new Error("geojson is invalid")}if(null===r)return null;var u=r.coordinates;switch(r.type){case"Point":return l(u,s,t);case"MultiPoint":return l(u[i=i<0?u.length+i:i],s,t);case"LineString":return l(u[a=a<0?u.length+a:a],s,t);case"Polygon":return o<0&&(o=u.length+o),a<0&&(a=u[o].length+a),l(u[o][a],s,t);case"MultiLineString":return i<0&&(i=u.length+i),a<0&&(a=u[i].length+a),l(u[i][a],s,t);case"MultiPolygon":return i<0&&(i=u.length+i),o<0&&(o=u[i].length+o),a<0&&(a=u[i][o].length-a),l(u[i][o][a],s,t)}throw new Error("geojson is invalid")},findSegment:function(e,t){if(!p(t=t||{}))throw new Error("options is invalid");var r,n=t.featureIndex||0,i=t.multiFeatureIndex||0,o=t.geometryIndex||0,a=t.segmentIndex||0,s=t.properties;switch(e.type){case"FeatureCollection":n<0&&(n=e.features.length+n),s=s||e.features[n].properties,r=e.features[n].geometry;break;case"Feature":s=s||e.properties,r=e.geometry;break;case"Point":case"MultiPoint":return null;case"LineString":case"Polygon":case"MultiLineString":case"MultiPolygon":r=e;break;default:throw new Error("geojson is invalid")}if(null===r)return null;var u=r.coordinates;switch(r.type){case"Point":case"MultiPoint":return null;case"LineString":return d([u[a=a<0?u.length+a-1:a],u[a+1]],s,t);case"Polygon":return o<0&&(o=u.length+o),a<0&&(a=u[o].length+a-1),d([u[o][a],u[o][a+1]],s,t);case"MultiLineString":return i<0&&(i=u.length+i),a<0&&(a=u[i].length+a-1),d([u[i][a],u[i][a+1]],s,t);case"MultiPolygon":return i<0&&(i=u.length+i),o<0&&(o=u[i].length+o),a<0&&(a=u[i][o].length-a-1),d([u[i][o][a],u[i][o][a+1]],s,t)}throw new Error("geojson is invalid")},flattenEach:b,flattenReduce:function(e,n,i){var o=i;return b(e,function(e,t,r){o=0===t&&0===r&&void 0===i?e:n(o,e,t,r)}),o},geomEach:t,geomReduce:function(e,o,a){var s=a;return t(e,function(e,t,r,n,i){s=0===t&&void 0===a?e:o(s,e,t,r,n,i)}),s},lineEach:z,lineReduce:function(e,i,o){var a=o;return z(e,function(e,t,r,n){a=0===t&&void 0===o?e:i(a,e,t,r,n)}),a},propEach:G,propReduce:function(e,r,n){var i=n;return G(e,function(e,t){i=0===t&&void 0===n?e:r(i,e,t)}),i},segmentEach:J,segmentReduce:function(e,o,a){var s=a,u=!1;return J(e,function(e,t,r,n,i){s=!1===u&&void 0===a?e:o(s,e,t,r,n,i),u=!0}),s}});function H(e){var o;if(e)return o=[],b(e,function(e){var t=e,r=o,n=[],i=t.geometry;if(null!==i){switch(i.type){case"Polygon":n=g(i);break;case"LineString":n=[g(i)]}n.forEach(function(e){var a,s;a=t.properties,s=[],e.reduce(function(e,t){var r,n,i,o=d([e,t],a);return o.bbox=(r=t,n=(e=e)[0],e=e[1],i=r[0],r=r[1],[n<i?n:i,e<r?e:r,i<n?n:i,r<e?e:r]),s.push(o),t}),s.forEach(function(e){e.id=r.length,r.push(e)})})}}),u(o);throw new Error("geojson is required")}function U(e,t,r,n,i){!function e(t,r,n,i,o){for(;n<i;){600<i-n&&(a=i-n+1,c=r-n+1,u=Math.log(a),s=.5*Math.exp(2*u/3),u=.5*Math.sqrt(u*s*(a-s)/a)*(c-a/2<0?-1:1),l=Math.max(n,Math.floor(r-c*s/a+u)),c=Math.min(i,Math.floor(r+(a-c)*s/a+u)),e(t,r,l,c,o));var a,s,u,l,c,h=t[r],f=n,p=i;for(w(t,n,r),0<o(t[i],h)&&w(t,n,i);f<p;){for(w(t,f,p),f++,p--;o(t[f],h)<0;)f++;for(;0<o(t[p],h);)p--}0===o(t[n],h)?w(t,n,p):w(t,++p,i),p<=r&&(n=p+1),r<=p&&(i=p-1)}}(e,t,r||0,n||e.length-1,i||V)}function w(e,t,r){var n=e[t];e[t]=e[r],e[r]=n}function V(e,t){return e<t?-1:t<e?1:0}x.prototype.all=function(){return this._all(this.data,[])},x.prototype.search=function(e){var t=this.data,r=[];if(C(e,t))for(var n=this.toBBox,i=[];t;){for(var o=0;o<t.children.length;o++){var a=t.children[o],s=t.leaf?n(a):a;C(e,s)&&(t.leaf?r.push(a):L(e,s)?this._all(a,r):i.push(a))}t=i.pop()}return r},x.prototype.collides=function(e){var t=this.data;if(C(e,t))for(var r=[];t;){for(var n=0;n<t.children.length;n++){var i=t.children[n],o=t.leaf?this.toBBox(i):i;if(C(e,o)){if(t.leaf||L(e,o))return!0;r.push(i)}}t=r.pop()}return!1},x.prototype.load=function(e){if(e&&e.length)if(e.length<this._minEntries)for(var t=0;t<e.length;t++)this.insert(e[t]);else{var r,n=this._build(e.slice(),0,e.length-1,0);this.data.children.length?this.data.height===n.height?this._splitRoot(this.data,n):(this.data.height<n.height&&(r=this.data,this.data=n,n=r),this._insert(n,this.data.height-n.height-1,!0)):this.data=n}return this},x.prototype.insert=function(e){return e&&this._insert(e,this.data.height-1),this},x.prototype.clear=function(){return this.data=F([]),this},x.prototype.remove=function(e,t){if(e)for(var r=this.data,n=this.toBBox(e),i=[],o=[],a=void 0,s=void 0,u=void 0;r||i.length;){if(r||(r=i.pop(),s=i[i.length-1],a=o.pop(),u=!0),r.leaf){var l=function(e,t,r){if(!r)return t.indexOf(e);for(var n=0;n<t.length;n++)if(r(e,t[n]))return n;return-1}(e,r.children,t);if(-1!==l)return r.children.splice(l,1),i.push(r),this._condense(i),this}u||r.leaf||!L(r,n)?s?(a++,r=s.children[a],u=!1):r=null:(i.push(r),o.push(a),r=(s=r).children[a=0])}return this},x.prototype.toBBox=function(e){return e},x.prototype.compareMinX=function(e,t){return e.minX-t.minX},x.prototype.compareMinY=function(e,t){return e.minY-t.minY},x.prototype.toJSON=function(){return this.data},x.prototype.fromJSON=function(e){return this.data=e,this},x.prototype._all=function(e,t){for(var r=[];e;)e.leaf?t.push.apply(t,e.children):r.push.apply(r,e.children),e=r.pop();return t},x.prototype._build=function(e,t,r,n){var i=r-t+1,o=this._maxEntries,a=void 0;if(i<=o)P(a=F(e.slice(t,r+1)),this.toBBox);else{n||(n=Math.ceil(Math.log(i)/Math.log(o)),o=Math.ceil(i/Math.pow(o,n-1))),(a=F([])).leaf=!1,a.height=n;var s=Math.ceil(i/o),u=s*Math.ceil(Math.sqrt(o));Z(e,t,r,u,this.compareMinX);for(var l=t;l<=r;l+=u){var c=Math.min(l+u-1,r);Z(e,l,c,s,this.compareMinY);for(var h=l;h<=c;h+=s){var f=Math.min(h+s-1,c);a.children.push(this._build(e,h,f,n-1))}}P(a,this.toBBox)}return a},x.prototype._chooseSubtree=function(e,t,r,n){for(;;){if(n.push(t),t.leaf||n.length-1===r)break;for(var i=1/0,o=1/0,a=void 0,s=0;s<t.children.length;s++){var u=t.children[s],l=S(u),c=(h=e,c=u,(Math.max(c.maxX,h.maxX)-Math.min(c.minX,h.minX))*(Math.max(c.maxY,h.maxY)-Math.min(c.minY,h.minY))-l);c<o?(o=c,i=l<i?l:i,a=u):c===o&&l<i&&(i=l,a=u)}t=a||t.children[0]}var h,c;return t},x.prototype._insert=function(e,t,r){var r=r?e:this.toBBox(e),n=[],i=this._chooseSubtree(r,this.data,t,n);for(i.children.push(e),E(i,r);0<=t&&n[t].children.length>this._maxEntries;)this._split(n,t),t--;this._adjustParentBBoxes(r,n,t)},x.prototype._split=function(e,t){var r=e[t],n=r.children.length,i=this._minEntries,i=(this._chooseSplitAxis(r,i,n),this._chooseSplitIndex(r,i,n)),n=F(r.children.splice(i,r.children.length-i));n.height=r.height,n.leaf=r.leaf,P(r,this.toBBox),P(n,this.toBBox),t?e[t-1].children.push(n):this._splitRoot(r,n)},x.prototype._splitRoot=function(e,t){this.data=F([e,t]),this.data.height=e.height+1,this.data.leaf=!1,P(this.data,this.toBBox)},x.prototype._chooseSplitIndex=function(e,t,r){for(var n,i,o,a=void 0,s=1/0,u=1/0,l=t;l<=r-t;l++){var c=M(e,0,l,this.toBBox),h=M(e,l,r,this.toBBox),f=(n=c,f=h,p=o=i=void 0,i=Math.max(n.minX,f.minX),o=Math.max(n.minY,f.minY),p=Math.min(n.maxX,f.maxX),n=Math.min(n.maxY,f.maxY),Math.max(0,p-i)*Math.max(0,n-o)),p=S(c)+S(h);f<s?(s=f,a=l,u=p<u?p:u):f===s&&p<u&&(u=p,a=l)}return a||r-t},x.prototype._chooseSplitAxis=function(e,t,r){var n=e.leaf?this.compareMinX:K,i=e.leaf?this.compareMinY:Q;this._allDistMargin(e,t,r,n)<this._allDistMargin(e,t,r,i)&&e.children.sort(n)},x.prototype._allDistMargin=function(e,t,r,n){e.children.sort(n);for(var i=this.toBBox,o=M(e,0,t,i),a=M(e,r-t,r,i),s=k(o)+k(a),u=t;u<r-t;u++){var l=e.children[u];E(o,e.leaf?i(l):l),s+=k(o)}for(var c=r-t-1;t<=c;c--){var h=e.children[c];E(a,e.leaf?i(h):h),s+=k(a)}return s},x.prototype._adjustParentBBoxes=function(e,t,r){for(var n=r;0<=n;n--)E(t[n],e)},x.prototype._condense=function(e){for(var t,r=e.length-1;0<=r;r--)0===e[r].children.length?0<r?(t=e[r-1].children).splice(t.indexOf(e[r]),1):this.clear():P(e[r],this.toBBox)};var r=x;function x(){var e=0<arguments.length&&void 0!==arguments[0]?arguments[0]:9,t=this,r=x;if(!(t instanceof r))throw new TypeError("Cannot call a class as a function");this._maxEntries=Math.max(4,e),this._minEntries=Math.max(2,Math.ceil(.4*this._maxEntries)),this.clear()}function P(e,t){M(e,0,e.children.length,t,e)}function M(e,t,r,n,i){(i=i||F(null)).minX=1/0,i.minY=1/0,i.maxX=-1/0,i.maxY=-1/0;for(var o=t;o<r;o++){var a=e.children[o];E(i,e.leaf?n(a):a)}return i}function E(e,t){e.minX=Math.min(e.minX,t.minX),e.minY=Math.min(e.minY,t.minY),e.maxX=Math.max(e.maxX,t.maxX),e.maxY=Math.max(e.maxY,t.maxY)}function K(e,t){return e.minX-t.minX}function Q(e,t){return e.minY-t.minY}function S(e){return(e.maxX-e.minX)*(e.maxY-e.minY)}function k(e){return e.maxX-e.minX+(e.maxY-e.minY)}function L(e,t){return e.minX<=t.minX&&e.minY<=t.minY&&t.maxX<=e.maxX&&t.maxY<=e.maxY}function C(e,t){return t.minX<=e.maxX&&t.minY<=e.maxY&&t.maxX>=e.minX&&t.maxY>=e.minY}function F(e){return{children:e,height:1,leaf:!0,minX:1/0,minY:1/0,maxX:-1/0,maxY:-1/0}}function Z(e,t,r,n,i){for(var o,a=[t,r];a.length;)(r=a.pop())-(t=a.pop())<=n||(U(e,o=t+Math.ceil((r-t)/n/2)*n,t,r,i),a.push(t,o,o,r))}var B=Object.freeze({default:r});function X(e){var t=[1/0,1/0,-1/0,-1/0];return _(e,function(e){t[0]>e[0]&&(t[0]=e[0]),t[1]>e[1]&&(t[1]=e[1]),t[2]<e[0]&&(t[2]=e[0]),t[3]<e[1]&&(t[3]=e[1])}),t}X.default=X;var $=Object.freeze({default:X}),Y=B&&r,A=($&&X).default,ee=W.featureEach,te=e.featureCollection;function re(e){e=new Y(e);return e.insert=function(e){if("Feature"!==e.type)throw new Error("invalid feature");return e.bbox=e.bbox||A(e),Y.prototype.insert.call(this,e)},e.load=function(e){var t=[];return Array.isArray(e)?e.forEach(function(e){if("Feature"!==e.type)throw new Error("invalid features");e.bbox=e.bbox||A(e),t.push(e)}):ee(e,function(e){if("Feature"!==e.type)throw new Error("invalid features");e.bbox=e.bbox||A(e),t.push(e)}),Y.prototype.load.call(this,t)},e.remove=function(e,t){if("Feature"!==e.type)throw new Error("invalid feature");return e.bbox=e.bbox||A(e),Y.prototype.remove.call(this,e,t)},e.clear=function(){return Y.prototype.clear.call(this)},e.search=function(e){e=Y.prototype.search.call(this,this.toBBox(e));return te(e)},e.collides=function(e){return Y.prototype.collides.call(this,this.toBBox(e))},e.all=function(){var e=Y.prototype.all.call(this);return te(e)},e.toJSON=function(){return Y.prototype.toJSON.call(this)},e.fromJSON=function(e){return Y.prototype.fromJSON.call(this,e)},e.toBBox=function(e){var t;if(e.bbox)t=e.bbox;else if(Array.isArray(e)&&4===e.length)t=e;else if(Array.isArray(e)&&6===e.length)t=[e[0],e[1],e[3],e[4]];else{if("Feature"!==e.type&&"FeatureCollection"!==e.type)throw new Error("invalid geojson");t=A(e)}return{minX:t[0],minY:t[1],maxX:t[2],maxY:t[3]}},e}var ne=re;function ie(e,t){var r,n,i={},o=[];return"LineString"===e.type&&(e=c(e)),"LineString"===t.type&&(t=c(t)),"Feature"===e.type&&"Feature"===t.type&&null!==e.geometry&&null!==t.geometry&&"LineString"===e.geometry.type&&"LineString"===t.geometry.type&&2===e.geometry.coordinates.length&&2===t.geometry.coordinates.length?(r=oe(e,t))&&o.push(r):((n=ne()).load(H(t)),v(H(e),function(r){v(n.search(r),function(e){var t,e=oe(r,e);e&&(t=g(e).join(","),i[t]||(i[t]=!0,o.push(e)))})})),u(o)}function oe(e,t){e=g(e),t=g(t);if(2!==e.length)throw new Error("<intersects> line1 must only contain 2 coordinates");if(2!==t.length)throw new Error("<intersects> line2 must only contain 2 coordinates");var r=e[0][0],n=e[0][1],i=e[1][0],e=e[1][1],o=t[0][0],a=t[0][1],s=t[1][0],t=t[1][1],u=(t-a)*(i-r)-(s-o)*(e-n),s=(s-o)*(n-a)-(t-a)*(r-o),t=(i-r)*(n-a)-(e-n)*(r-o);return 0!=u&&(a=t/u,0<=(o=s/u))&&o<=1&&0<=a&&a<=1?l([r+o*(i-r),n+o*(e-n)]):null}ne.default=re;function ae(e,t){void 0===t&&(t={});var r,n,i,o,a,s=m(e);switch(t.properties||"Feature"!==e.type||(t.properties=e.properties),s.type){case"Polygon":return void 0===(o=t)&&(o={}),a=m(i=s).coordinates,o=o.properties||("Feature"===i.type?i.properties:{}),se(a,o);case"MultiPolygon":return void 0===(i=t)&&(i={}),o=m(a=s).coordinates,r=i.properties||("Feature"===a.type?a.properties:{}),n=[],o.forEach(function(e){n.push(se(e,r))}),u(n);default:throw new Error("invalid poly")}}function se(e,t){return 1<e.length?s(e,t):d(e[0],t)}function ue(e,r){var n=!0;return b(e,function(t){b(r,function(e){if(!1===n)return!1;n=function(e,t){switch(e.type){case"Point":switch(t.type){case"Point":return!function(e,t){return e[0]===t[0]&&e[1]===t[1]}(e.coordinates,t.coordinates);case"LineString":return!le(t,e);case"Polygon":return!y(e,t)}break;case"LineString":switch(t.type){case"Point":return!le(e,t);case"LineString":return!function(e,t){if(0<ie(e,t).features.length)return 1;return}(e,t);case"Polygon":return!ce(t,e)}break;case"Polygon":switch(t.type){case"Point":return!y(t,e);case"LineString":return!ce(e,t);case"Polygon":return!function(e,t){for(var r=0,n=e.coordinates[0];r<n.length;r++)if(y(n[r],t))return 1;for(var i=0,o=t.coordinates[0];i<o.length;i++)if(y(o[i],e))return 1;if(0<ie(ae(e),ae(t)).features.length)return 1;return}(t,e)}}return!1}(t.geometry,e.geometry)})}),n}function le(e,t){for(var r=0;r<e.coordinates.length-1;r++)if(function(e,t,r){var n=r[0]-e[0],i=r[1]-e[1],o=t[0]-e[0],a=t[1]-e[1];if(n*a-i*o!=0)return;return Math.abs(o)>=Math.abs(a)?0<o?e[0]<=r[0]&&r[0]<=t[0]:t[0]<=r[0]&&r[0]<=e[0]:0<a?e[1]<=r[1]&&r[1]<=t[1]:t[1]<=r[1]&&r[1]<=e[1]}(e.coordinates[r],e.coordinates[r+1],t.coordinates))return 1}function ce(e,t){for(var r=0,n=t.coordinates;r<n.length;r++)if(y(n[r],e))return 1;return 0<ie(t,ae(e)).features.length}function he(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);if(e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t)if(Object.setPrototypeOf)Object.setPrototypeOf(e,t);else for(var r=e,n=t,i=Object.getOwnPropertyNames(n),o=0;o<i.length;o++){var a=i[o],s=Object.getOwnPropertyDescriptor(n,a);s&&s.configurable&&void 0===r[a]&&Object.defineProperty(r,a,s)}}var fe,pe=i.INTERNAL_LAYER_PREFIX+"_identify_map_tool",B="#2b81ff",de={markerType:"pin",markerFill:B,markerLineColor:"#fff",markerLineWidth:2,markerWidth:48,markerHeight:40},ge={lineColor:B,lineWidth:2,polygonFill:B,polygonOpacity:.15},me={markerType:"ellipse",markerFill:B,markerLineColor:"#fff",markerLineWidth:2,markerLineOpacity:1,markerWidth:12,markerHeight:12},ye={lineColor:B,lineWidth:2,textPlacement:"line",textName:"{value}",textSize:16,textFill:B,textHaloFill:"#fff",textHaloRadius:2,textDy:16},r=(he(O,fe=i.MapTool),O.prototype.onAdd=function(){this._map=this.getMap()},O.prototype.onEnable=function(){this._initLayer(),this._initRange(),this._initDistance(),this._initCenterPoint(),this._initDistancePoint()},O.prototype.getEvents=function(){return{}},O.prototype.onDisable=function(){this._layer&&this._layer.remove()},O.prototype.setCenter=function(){var e=0<arguments.length&&void 0!==arguments[0]?arguments[0]:this._map.getCenter(),t=(e instanceof i.Coordinate||(e=new i.Coordinate(e)),this._centerP.getCoordinates()),r=e.x-t.x,n=e.y-t.y;this._layer.forEach(function(e){return e.translate(r,n)}),this._fireRangeChange()},O.prototype.setRadius=function(){var t=this;this._animateRadius(0<arguments.length&&void 0!==arguments[0]?arguments[0]:1e3,function(){var e=t._range.getShell()[0];t._handleDistChange(e),t._fireRangeChange()})},O.prototype.submit=function(){var t=this,r=this._getFireData(),e=this._map.distanceToPixel(r.radius).width;this._map.identify({coordinate:r.center,tolerance:~~e,layers:this.options.layers,filter:this.options.filter,count:this.options.count,includeInternals:this.options.includeInternals,includeInvisible:this.options.includeInvisible},function(e){r.data=e.filter(function(e){return!ue(t._range.toGeoJSON(),e.toGeoJSON())}),t.fire("identify",r)})},O.prototype._initLayer=function(){this._layer=new i.VectorLayer(pe).addTo(this._map)},O.prototype._initRange=function(){var e=this._map.getCenter();this._range=new i.Circle(e,1e3,{symbol:ge,numberOfShellPoints:720}),this._range.addTo(this._layer)},O.prototype._initDistance=function(){var t=this,e=this._map.getCenter(),r=this._range.getShell()[0];this._distance=new i.LineString([e,r],{symbol:ye,properties:{value:this._calcDistance(1e3)}}),this._distance.on("shapechange",function(){var e=t._distance.getLength();t._animateRadius(e,function(){t._distance.setProperties({value:t._calcDistance(e)}),t._distance.setSymbol(ye)})}),this._distance.addTo(this._layer)},O.prototype._calcDistance=function(e){return e<=1e3?e.toFixed(e%1==0?0:1)+"m":(e/=1e3).toFixed(2)+"km"},O.prototype._animateRadius=function(e,t){this._range.animate({radius:e},{duration:1e3/60},function(e){"finished"===e.state.playState&&t()})},O.prototype._initCenterPoint=function(){var e=this._map.getCenter();this._centerP=new i.Marker(e,{symbol:de}),this._centerP.addTo(this._layer)},O.prototype._initDistancePoint=function(){var t=this,e=this._range.getShell()[0];this._distP=new i.Marker(e,{symbol:me,properties:{value:this._distance.getLength()},draggable:!0}),this._distP.on("dragging",function(e){t._handleDistChange(e.coordinate)}),this._distP.on("dragend",function(e){t._handleDistChange(e.coordinate),t._fireRangeChange()}),this._distP.addTo(this._layer)},O.prototype._handleDistChange=function(e){this._distance.setCoordinates([this._centerP.getCenter(),e]),this._distP.setCoordinates(this._distance.getLastCoordinate())},O.prototype._fireRangeChange=function(){var e=this._getFireData();this.fire("rangechange",e)},O.prototype._getFireData=function(){return{center:this._range.getCenter(),radius:this._range.getRadius(),area:this._range.getArea()}},O);function O(e){if(!(this instanceof O))throw new TypeError("Cannot call a class as a function");var t=this,e=fe.call(this,e);if(t)return!e||"object"!=typeof e&&"function"!=typeof e?t:e;throw new ReferenceError("this hasn't been initialised - super() hasn't been called")}r.mergeOptions({layers:[],filter:null,count:null,includeInternals:!1,includeInvisible:!1}),R.IdentifyTool=r,Object.defineProperty(R,"__esModule",{value:!0}),"undefined"!=typeof console&&console.log("maptalks.maptool.identifytool v0.1.0-alpha.1, requires maptalks@>=1.0.0-rc.1.")});